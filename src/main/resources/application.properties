server.port=8080

#GITHUB
#Token para commit: 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

#Esse parâmetro vai criar automaticamento as tabelas e atributos no banco de dados.. legal usar isso para cenários
#de teste em ambiente de dev. Se você remover um atributo de uma classe @Entity, ele não remove da tabela. Apenas cria.
spring.jpa.hibernate.ddl-auto=update
spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect

##Essas são as 3 variáveis de ambiente que foram definidas na task do container no projeto cdk.
##Aqui o valor do "username" e "password" importa apenas se for testar localmente, pois para subir na aws esses valores
##serão gerados no momento de fazer o deploy da stack pelo console com o --parameters
spring.datasource.url=jdbc:mariadb://localhost:3306/aws_project01?createDatabaseIfNotExist=true
spring.datasource.username=root
spring.datasource.password=root


#SNS - Variáveis de ambiente customizadas para conseguir acessar o tópico (precisa injetar no cdk também)
#Variáveis foram injetadas na classe SnsConfig aqui da aplicação
aws.region=us-east-1
aws.sns.topic.product.events.arn=product-events

aws.s3.bucket.invoice.name=pcs-invoice

aws.sqs.queue.invoice.events.name=s3-invoice-events